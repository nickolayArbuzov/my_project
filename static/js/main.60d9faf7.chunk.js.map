{"version":3,"sources":["Routes/Navlinks/Navlinks.module.css","components/registration/Registration.module.css","components/error404/Error404.module.css","components/profile/Profile.module.css","components/login/Login.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/nav/Nav.module.css","components/packs/Packs.module.css","components/cards/Cards.module.css","components/users/Users.module.css","components/stats/Stats.module.css","components/stats/gistogramm/Gistogramm.module.css","api/api.tsx","state/reducers/users.ts","state/reducers/AuthReducer.ts","components/profile/Profile.tsx","state/reducers/login.ts","components/login/Login.tsx","state/reducers/passwordRecovery.ts","components/passwordRecovery/PasswordRecovery.tsx","components/enteringNewPassword/EnteringNewPassword.tsx","state/reducers/registration.ts","components/registration/Registration.tsx","utils/validators/validators.tsx","components/error404/Error404.tsx","Routes/Navlinks/Navlinks.tsx","components/nav/Nav.tsx","state/reducers/packs.ts","components/packs/Packs.tsx","state/reducers/cards.ts","state/reducers/grade.ts","components/cards/Cards.tsx","components/users/Users.tsx","components/stats/gistogramm/Gistogramm.tsx","components/stats/Stats.tsx","Routes/Routes.tsx","App.tsx","reportWebVitals.ts","state/reducers/profileReducer.ts","state/reducers/enteringNewPassword.ts","state/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","authAPI","email","password","post","from","message","rememberMe","delete","packsAPI","packName","min","max","page","pageCount","get","privatePack","cardsPack","id","cardsAPI","cardAnswer","cardQuestion","cardsPack_id","gradeAPI","grade","card_id","put","usersAPI","userName","usersInitialState","usersTC","dispatch","then","res","catch","error","alert","initialState","_id","avatar","cardCount","isAuthAC","type","getProfileAC","Profile","useDispatch","isAuth","useSelector","state","auth","onClickStatsHandler","useCallback","onClickLogoutHandler","className","styles","container","onClick","src","alt","to","Login","useState","setEmail","setPassword","setRememberMe","onClickHandler","data","name","publicCardPacksCount","loginTC","loginWrapper","onChange","e","currentTarget","value","title","checked","passwordRecoveryInitialState","redirect","PasswordRecovery","passwordRecovery","mail","setMail","SplitFlap","setSplitFlap","originalPass","setOriginalPass","repeatedPass","setRepeatedPass","recoveryMail","resPassword","resPasswordTC","recoveryPass","PATH","LOGIN","style","height","margin","EnteringNewPassword","serverError","Registration","emailValue","setEmailValue","passwordValue","setPasswordValue","passwordValue2","setPasswordValue2","setError","registration","useEffect","minLength","length","minLengthCreator","body","inputStyle","placeholder","response","payload","setRegister","addedUser","err","register","Error","errorContainer","link","PROFILE","Navlinks","groupLink","PASSWORD_RECOVERY","ENTERING_NEW_PASSWORD","REGISTRATION","PACKS","CARDS","USERS","STATS","Nav","nav","packsInitialState","packs","cardPacksTotalCount","created","getPacksTC","getPacksAC","cardPacks","Packs","addingPackName","setAddingPackName","setPrivatePack","filterPackName","setFilterPackName","onClickHandlerAddingPackName","addPackTC","onChangeHandlerFilterPackName","map","el","cardsCount","private","user_id","user_name","cardsInitialState","shots","rating","gradeInitialState","Cards","cards","Users","users","Gistogramm","props","yellow","koef","count","backgroundColor","date","Stats","arr","i","substr","narr","Object","entries","reduce","acc","Number","console","log","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","login","action","profile","enteringNewPassword","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60d9faf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupLink\":\"Navlinks_groupLink__2j2Aw\",\"link\":\"Navlinks_link__2VgYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Registration_body__2CrT9\",\"inputStyle\":\"Registration_inputStyle__2Mfw7\",\"error\":\"Registration_error__1P4Hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorContainer\":\"Error404_errorContainer__HHh00\",\"error\":\"Error404_error__1BccW\",\"link\":\"Error404_link__TQjTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1b8af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__169F6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PasswordRecovery_container__3dUeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1EKLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Packs_container__1qtT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__16gLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__32HvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Stats_container__3ckfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Gistogramm_container__2vURr\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    //baseURL: \"http://localhost:7542/2.0/\",\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n})\r\n\r\nexport const authAPI = {\r\n\r\n    register(email: string, password: string) {\r\n        return instance.post(`auth/register`, {email, password})\r\n    },\r\n    recoverPass(email: string, from: string, message: string){\r\n        return instance.post('auth/forgot', {email, from, message})\r\n    },\r\n    updatePass(password: string, resetPasswordToken: string){\r\n        return instance.post('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean){\r\n        return instance.post(\"auth/login\", {email, password, rememberMe});\r\n    },\r\n    checkAuth(){\r\n        return instance.post(\"auth/me\", {});\r\n    },\r\n    logout(){\r\n        return instance.delete(\"auth/me\", {});\r\n    },\r\n}\r\n\r\nexport const packsAPI = {\r\n\r\n    getPacks(packName: string, min: number, max: number, page: number, pageCount: number){\r\n        return instance.get(`cards/pack?packName=${packName}&min=${min}&max=${max}&page=${page}&pageCount=${pageCount}`)\r\n    },\r\n    addPack(packName: string, privatePack: boolean){\r\n        return instance.post('cards/pack', {cardsPack: {packName, privatePack}})\r\n    },\r\n    deletePack(id: string){\r\n        return instance.delete(`cards/pack?id=${id}`)\r\n    },\r\n    updatePack(id: string, packName: string){\r\n        return instance.put('cards/pack', {cardsPack: {id, packName}})\r\n    },\r\n\r\n}\r\n\r\nexport const cardsAPI = {\r\n\r\n    getCards(cardAnswer: string, cardQuestion: string, cardsPack_id: string, min: number, max: number, page: number, pageCount: number){\r\n        return instance.get(`cards/card?cardAnswer=${cardAnswer}&cardQuestion=${cardQuestion}&cardsPack_id=${cardsPack_id}&min=${min}&max=${max}&page=${page}&pageCount=${pageCount}`)\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string, grade: number, shots: number, rating: number, type: string){\r\n        return instance.post('cards/card', {cardsPack_id, question, answer, grade, shots, rating, type})\r\n    },\r\n    deleteCard(id: string){\r\n        return instance.delete(`cards/card?id=${id}`)\r\n    },\r\n    updateCard(cardsPack_id: string, question: string){\r\n        return instance.put('cards/card', {cardsPack_id, question})\r\n    },\r\n\r\n}\r\n\r\nexport const gradeAPI = {\r\n\r\n    updateGrade(grade: 1|2|3|4|5, card_id: string){\r\n        return instance.put('cards/grade', {grade, card_id})\r\n    },\r\n\r\n}\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(userName: string, min: number, max: number, page: number, pageCount: number){\r\n        return instance.get(`social/users?userName=${userName}&min=${min}&max=${max}&page=${page}&pageCount=${pageCount}`)\r\n    },\r\n\r\n}\r\n\r\nexport type CardPackType={\r\n    cardsCount: number\r\n    created: string\r\n    deckCover: null\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type:string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id:string\r\n}","import {usersAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst usersInitialState = {\r\n    userName: '', \r\n    min: 1, \r\n    max: 1, \r\n    page: 1, \r\n    pageCount: 1,\r\n}\r\n\r\nexport const usersReducer = (state: UsersInitialState = usersInitialState, action: ActionType): UsersInitialState => {\r\n    switch (action.type) {\r\n        case \"USERS/GET_USERS\":\r\n            return {...state, \r\n                userName: action.userName, \r\n                min: action.min, \r\n                max: action.max, \r\n                page: action.page, \r\n                pageCount: action.pageCount,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action\r\nexport const getUsersAC = (userName: string, min: number, max: number, page: number, pageCount: number) => (\r\n    {type: \"USERS/GET_USERS\", userName, min, max, page, pageCount} as const);\r\n\r\n//TC    \r\nexport const usersTC = (userName: string, min: number, max: number, page: number, pageCount: number) => (dispatch: Dispatch) => {\r\n    return usersAPI.getUsers(userName, min, max, page, pageCount)\r\n        .then((res) => {\r\n            debugger\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\n\r\n// Type\r\nexport type UsersInitialState = typeof usersInitialState\r\nexport type ActionType = GetUsers\r\n\r\nexport type GetUsers = ReturnType<typeof getUsersAC>","import {authAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    _id: \"\",\r\n    avatar: \"\",\r\n    userName: \"\",\r\n    cardCount: 0,\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"AUTH/CHECK-AUTH\":\r\n            return {...state, _id: action._id};\r\n        case \"AUTH/GET-PROFILE\":\r\n            return {...state, avatar: action.avatar, userName: action.userName, cardCount: action.cardCount};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const authTC = () => (dispatch: Dispatch) => {\r\n    return authAPI.checkAuth()\r\n        .then((res) => {\r\n            if (res) {\r\n                dispatch(isAuthAC(res.data._id));\r\n                dispatch(getProfileAC(res.data.avatar, res.data.name, res.data.publicCardPacksCount));\r\n            }\r\n        })\r\n        .catch((error) => {\r\n\r\n        })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    return authAPI.logout()\r\n        .then(() => dispatch(isAuthAC(\"\")))\r\n        .catch((error) => {\r\n\r\n        })\r\n}\r\n\r\nexport const isAuthAC = (_id: string) => ({type: \"AUTH/CHECK-AUTH\", _id} as const);\r\nexport const getProfileAC = (avatar: string, userName: string, cardCount: number) => (\r\n    {type: \"AUTH/GET-PROFILE\", avatar, userName, cardCount} as const);\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type IsAuthType = ReturnType<typeof isAuthAC>;\r\nexport type GetProfileType = ReturnType<typeof getProfileAC>;\r\n\r\ntype ActionsType = IsAuthType | GetProfileType;","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {usersTC} from \"../../state/reducers/users\";\r\nimport {logoutTC} from \"../../state/reducers/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport styles from './Profile.module.css';\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch();\r\n    let isAuth = useSelector<appRootStateType>(state => state.auth._id);\r\n    let avatar = useSelector<appRootStateType, string>(state => state.auth.avatar)\r\n    let userName = useSelector<appRootStateType, string>(state => state.auth.userName)\r\n    let cardCount = useSelector<appRootStateType, number>(state => state.auth.cardCount)\r\n\r\n    const onClickStatsHandler = useCallback(() => {\r\n        dispatch(usersTC('nya', 3, 9, 1, 7))\r\n    },[dispatch]);\r\n\r\n    const onClickLogoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    },[dispatch]);\r\n\r\n    if(!isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2>Profile</h2>\r\n            <button onClick={onClickStatsHandler}>Show users</button>\r\n            <button onClick={onClickLogoutHandler}>Logout</button>\r\n            <img src={avatar} alt=\"avatar\"/>\r\n            <h3>Hello {userName}</h3>\r\n            <h4>You have {cardCount} packs</h4>\r\n        </div>\r\n    )\r\n}","import {authAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {isAuthAC, getProfileAC} from \"./AuthReducer\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/LOGIN\":\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    return authAPI.login(email, password, rememberMe)\r\n        .then((res) => {\r\n            if (res) {\r\n                dispatch(isAuthAC(res.data._id));\r\n                dispatch(getProfileAC(res.data.avatar, res.data.name, res.data.publicCardPacksCount));\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            \r\n        })\r\n}\r\n\r\nexport const loginAC = (email: string, password: string, rememberMe: boolean) => (\r\n    {type: \"LOGIN/LOGIN\", email, password, rememberMe} as const);\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type LoginType = ReturnType<typeof loginAC>;\r\n\r\ntype ActionsType = LoginType;","import React, {useState, useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../state/reducers/login\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport styles from './Login.module.css';\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n    let isAuth = useSelector<appRootStateType>(state => state.auth._id);\r\n    let [email, setEmail] = useState(\"Nickolay@Arbuzov.tech\");\r\n    let [password, setPassword] = useState(\"11111111\");\r\n    let [rememberMe, setRememberMe] = useState(false);\r\n\r\n    const onChangeHandlerEmail = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value);\r\n    }\r\n    const onChangeHandlerPassword = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value);\r\n    }\r\n    const onChangeHandlerRememberMe = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setRememberMe(e.currentTarget.checked);\r\n    }\r\n\r\n    const onClickHandler = useCallback(() => {\r\n        dispatch(loginTC(email, password, rememberMe))\r\n    },[email, password, rememberMe]);\r\n\r\n    if(isAuth) return <Redirect to={\"/profile\"}/>;\r\n\r\n    return (\r\n        <div className={styles.loginWrapper}>\r\n            <h2>Login</h2>\r\n            <h3>account</h3>\r\n            <input onChange={onChangeHandlerEmail} value={email}/>\r\n            <h3>password</h3>\r\n            <input type=\"password\" onChange={onChangeHandlerPassword} value={password}/>\r\n            <h3>remember me</h3>\r\n            <input type=\"checkbox\" title={\"remember Me\"} onClick={onChangeHandlerRememberMe} checked={rememberMe}/>\r\n            <button onClick={onClickHandler}>LogIn</button>\r\n        </div>\r\n    )\r\n}","import {authAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst passwordRecoveryInitialState = {\r\n    email: '',\r\n    from: '',\r\n    message:'' ,\r\n    password:'',\r\n    redirect: false,\r\n\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: PasswordRecoveryInitialState = passwordRecoveryInitialState, action: ActionType): PasswordRecoveryInitialState => {\r\n    switch (action.type) {\r\n        case \"RECOVERY/PASSWORD\":\r\n            return {...state, password: action.password}\r\n        case \"RECOVERY/NEW-PASSWORD\": {\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                from: action.from,\r\n                message: action.message\r\n            }\r\n        }\r\n        case \"RECOVERY/REDIRECT-TRUE\": {\r\n            return {...state, redirect: false}\r\n        }\r\n        case \"RECOVERY/REDIRECT-FALSE\": {\r\n            return {...state, redirect: true}\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n//Action\r\nexport const resPassword = (email: string, from: string, message: string) =>\r\n    ({type: \"RECOVERY/NEW-PASSWORD\", email, from, message} as const)\r\nexport const redirectT = () => ({type: \"RECOVERY/REDIRECT-TRUE\"} as const)\r\nexport const redirectF = () => ({type: \"RECOVERY/REDIRECT-FALSE\"} as const)\r\nexport const passwordAC = (password: string) => ({type: \"RECOVERY/PASSWORD\", password} as const)\r\n\r\n//TC     password recover link ???\r\nexport const resPasswordTC = (email: string, from: string, message: string) => (dispatch: Dispatch) => {\r\n    return authAPI.recoverPass(email, from, message)\r\n        .then((res) => {\r\n            dispatch(resPassword(email, from, message))\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\n\r\n// Type\r\nexport type PasswordRecoveryInitialState = typeof passwordRecoveryInitialState\r\nexport type ActionType =\r\n    | ResPassword\r\n    | RedirectT\r\n    | RedirectF\r\n    | Password\r\n\r\nexport type ResPassword = ReturnType<typeof resPassword>\r\nexport type RedirectT = ReturnType<typeof redirectT>\r\nexport type RedirectF = ReturnType<typeof redirectF>\r\nexport type Password = ReturnType<typeof passwordAC>","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resPasswordTC} from \"../../state/reducers/passwordRecovery\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes/Routes\";\r\nimport styles from \"./PasswordRecovery.module.css\";\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    let redirect = useSelector<appRootStateType, boolean>(state => state.passwordRecovery.redirect);\r\n\r\n    let [mail, setMail] = useState('nya-admin@nya.nya');\r\n    let [SplitFlap, setSplitFlap] = useState(false);\r\n    let [originalPass, setOriginalPass] = useState('1qazxcvBG');\r\n    let [repeatedPass, setRepeatedPass] = useState('1qazxcvBG');\r\n\r\n    const updateMail = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setMail(e.currentTarget.value);\r\n    }\r\n\r\n    const updateFirstPassword = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setOriginalPass(e.currentTarget.value);\r\n    }\r\n\r\n    const updateLastPassword = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setRepeatedPass(e.currentTarget.value);\r\n    }\r\n    \r\n    let message = `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                    <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`;\r\n    let from = \"test-front-admin <ai73a@yandex.by>\";\r\n    const recoveryMail = useCallback( ()=> {\r\n        if (mail === 'nya-admin@nya.nya'){\r\n            setSplitFlap(true);\r\n            dispatch(resPasswordTC(mail, from, message));   //alert reducer reverseRassword\r\n        }else {\r\n            setSplitFlap(false);\r\n        }\r\n    },[mail])\r\n\r\n    const recoveryPass = useCallback( ()=> {\r\n        if (setOriginalPass === setRepeatedPass){\r\n            \r\n        }\r\n    },[setOriginalPass, setRepeatedPass]);\r\n\r\n    if (redirect) {\r\n        return (\r\n            <Redirect from={PATH.LOGIN} to={PATH.LOGIN}/>\r\n        )\r\n    }\r\n\r\n    else{\r\n        return (\r\n            <div className={styles.container}>\r\n                <h1>Recovery</h1>\r\n                <span>email</span>\r\n                <input onChange={updateMail} value={mail}/>\r\n                <div style={{height:'10px'}}></div>\r\n                <button onClick={recoveryMail}>Send mail</button>\r\n                {SplitFlap &&\r\n                <div style={{margin:\"20px\"}}>\r\n                    <span>password</span>\r\n                    <input onChange={updateFirstPassword} value={originalPass} />\r\n                    <div style={{height:'10px'}}></div>\r\n                    <span>password</span>\r\n                    <input onChange={updateLastPassword} value={repeatedPass} />\r\n                    <div style={{height:'10px'}}></div>\r\n                    <button onClick={recoveryPass}>Recovery pass</button>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport const EnteringNewPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>EnteringNewPassword</h1>\r\n        </div>\r\n    )\r\n}","import {Action} from \"redux\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {authAPI} from \"../../api/api\";\r\nimport {appRootStateType} from \"../store\";\r\n\r\nconst initialState = {\r\n    email: null,\r\n    password: null,\r\n    serverError: null\r\n}\r\n\r\ntype actionType = ReturnType<typeof setRegister> | ReturnType<typeof setError>\r\n\r\ntype initialStateType = {\r\n    email: null | string,\r\n    password: null | string\r\n    serverError: null | string\r\n}\r\n\r\nexport const registrationReducer = (state: initialStateType = initialState, action: actionType) => {\r\n    switch (action.type) {\r\n        case \"SET_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case \"SET_ERROR\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setRegister = (email: string, password: string) => (\r\n    {type: 'SET_USER_DATA', payload: {email, password}} as const)\r\nexport const setError = (serverError: string) => (\r\n    {type: 'SET_ERROR', payload: {serverError}} as const)\r\n\r\n\r\nexport const register = (email: string, password: string) => {\r\n    return (dispatch: ThunkDispatch<appRootStateType, undefined, Action>) => {\r\n        authAPI.register(email, password).then(response => {\r\n            dispatch(setRegister(response.data.addedUser.email, response.data.addedUser.password))\r\n        }).catch(err => {\r\n            dispatch(setError(err.response.data.addedUser.error))\r\n        })\r\n    }\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport styles from \"./Registration.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {register} from \"../../state/reducers/registration\";\r\nimport {minLengthCreator} from \"../../utils/validators/validators\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Registration = () => {\r\n\r\n    let [emailValue, setEmailValue] = useState(\"\")\r\n    let [passwordValue, setPasswordValue] = useState(\"\")\r\n    let [passwordValue2, setPasswordValue2] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(\"\")\r\n\r\n    const email = useSelector<appRootStateType, string | null>((state) => state.registration.email)\r\n    const serverError = useSelector<appRootStateType, string | null>((state) => state.registration.serverError)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setError(serverError)\r\n    }, [serverError])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setEmailValue(\"\")\r\n            setPasswordValue(\"\")\r\n            setPasswordValue2(\"\")\r\n        }\r\n    }, [])\r\n\r\n    const minLength = minLengthCreator(7)\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        setEmailValue(e.currentTarget.value)\r\n    }\r\n    const passwordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const response = minLength(e.currentTarget.value);\r\n        if (response) {\r\n            setError(response)\r\n        } else {\r\n            setError(null)\r\n        }\r\n        setPasswordValue(e.currentTarget.value)\r\n    }\r\n    const passwordHandler2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const response = minLength(e.currentTarget.value);\r\n        if (response) {\r\n            setError(response)\r\n        } else {\r\n            setError(null)\r\n        }\r\n        setPasswordValue2(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (passwordValue !== passwordValue2) {\r\n            setError('Password mismatch')\r\n            return\r\n        }\r\n        dispatch(register(emailValue, passwordValue))\r\n    }\r\n\r\n    if (email) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.body}>\r\n            <h2>Registration</h2>\r\n            <div className={styles.error}>{error}</div>\r\n            <div className={styles.inputStyle}>\r\n                <input type=\"text\" placeholder={'Email'} value={emailValue} onChange={emailHandler}/>\r\n                <input type=\"password\" placeholder={'Password'} value={passwordValue} onChange={passwordHandler}/>\r\n                <input type=\"password\" placeholder={'Password'} value={passwordValue2} onChange={passwordHandler2}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={onSubmit}>Register\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const required = (value: string) => {\r\n    if (value)\r\n        return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\n\r\nexport const minLengthCreator = (minLength: string | number) => (value: string) => {\r\n    if (value.length < minLength)\r\n        return `Min length ${minLength} symbols`\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Error404.module.css'\r\nimport {PATH} from \"../../Routes/Routes\";\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <div className={style.errorContainer}>\r\n            <div className={style.error}>\r\n                <h1>404 Error page</h1>\r\n                <p>Sorry, This page doesn't exist</p>\r\n                <NavLink className={style.link} to={PATH.PROFILE}>Go To Profile</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {PATH} from \"../Routes\";\r\nimport style from './Navlinks.module.css'\r\n\r\nexport const Navlinks = () => {\r\n    return (\r\n        <div className={style.groupLink}>\r\n            <NavLink className={style.link} to={PATH.PROFILE}>Profile</NavLink>\r\n            <NavLink className={style.link} to={PATH.LOGIN}>Login</NavLink>\r\n            <NavLink className={style.link} to={PATH.PASSWORD_RECOVERY}>Password Recovery</NavLink>\r\n            <NavLink className={style.link} to={PATH.ENTERING_NEW_PASSWORD}>Entering New Password</NavLink>\r\n            <NavLink className={style.link} to={PATH.REGISTRATION}>Registration</NavLink>\r\n            <NavLink className={style.link} to={PATH.PACKS}>Packs</NavLink>\r\n            <NavLink className={style.link} to={PATH.CARDS}>Cards</NavLink>\r\n            <NavLink className={style.link} to={PATH.USERS}>Users</NavLink>\r\n            <NavLink className={style.link} to={PATH.STATS}>Stats</NavLink>\r\n        </div>\r\n    )\r\n}","import {Navlinks} from \"../../Routes/Navlinks/Navlinks\";\r\nimport style from './Nav.module.css'\r\n\r\nexport const Nav = () => {\r\n    return (\r\n        <div className={style.nav}>\r\n            <Navlinks />\r\n        </div>\r\n    )\r\n}","import {packsAPI, CardPackType} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst packsInitialState = {\r\n    packs: [] as Array<CardPackType>,\r\n    packName: '',\r\n    min: 1,\r\n    max: 1,\r\n    page: 1,\r\n    pageCount: 1,\r\n    privatePack: false,\r\n    id: '',\r\n    cardPacksTotalCount: 0,\r\n    created: '',\r\n}\r\n\r\nexport const packsReducer = (state: PacksInitialState = packsInitialState, action: ActionType): PacksInitialState => {\r\n    switch (action.type) {\r\n        case \"PACKS/GET_PACKS\":\r\n            return {...state, \r\n                packs: action.packs,\r\n                cardPacksTotalCount: action.cardPacksTotalCount,\r\n                page: action.page,\r\n                pageCount: action.pageCount,\r\n            }\r\n        case \"PACKS/ADD_PACK\":\r\n            return {...state, \r\n                packName: action.packName,\r\n                privatePack: action.privatePack,\r\n            }\r\n        case \"PACKS/DELETE_PACK\":\r\n            return {...state, \r\n                id: action.id,\r\n            }\r\n        case \"PACKS/UPDATE_PACK\":\r\n            return {...state, \r\n                id: action.id,\r\n                packName: action.packName,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action\r\nexport const getPacksAC = (packs: Array<CardPackType>, cardPacksTotalCount: number, page: number, pageCount: number) => (\r\n    {type: \"PACKS/GET_PACKS\", packs, cardPacksTotalCount, page, pageCount} as const);\r\nexport const addPackAC = (packName: string, privatePack: boolean) => (\r\n    {type: \"PACKS/ADD_PACK\", packName, privatePack} as const);\r\nexport const deletePackAC = (id: string) => (\r\n    {type: \"PACKS/DELETE_PACK\", id} as const);\r\nexport const updatePackAC = (id: string, packName: string) => (\r\n    {type: \"PACKS/UPDATE_PACK\", id, packName} as const);\r\n\r\n//TC    \r\nexport const getPacksTC = (packName: string, min: number, max: number, page: number, pageCount: number) => (dispatch: Dispatch) => {\r\n    return packsAPI.getPacks(packName, min, max, page, pageCount)\r\n        .then((res) => {\r\n            dispatch(getPacksAC(res.data.cardPacks, res.data.cardPacksTotalCount, res.data.page, res.data.pageCount));\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\nexport const addPackTC = (packName: string, privatePack: boolean) => (dispatch: Dispatch) => {\r\n    return packsAPI.addPack(packName, privatePack)\r\n        .then((res) => {\r\n            debugger\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\nexport const deletePackTC = (id: string) => (dispatch: Dispatch) => {\r\n    return packsAPI.deletePack(id)\r\n        .then((res) => {\r\n            debugger\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\nexport const updatePackTC = (id: string, packName: string) => (dispatch: Dispatch) => {\r\n    return packsAPI.updatePack(id, packName)\r\n        .then((res) => {\r\n            debugger\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\n\r\n// Type\r\nexport type PacksInitialState = typeof packsInitialState\r\nexport type ActionType = GetPacks | AddPack | DeletePack | UpdatePack\r\n\r\nexport type GetPacks = ReturnType<typeof getPacksAC>\r\nexport type AddPack = ReturnType<typeof addPackAC>\r\nexport type DeletePack = ReturnType<typeof deletePackAC>\r\nexport type UpdatePack = ReturnType<typeof updatePackAC>","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPacksTC, addPackTC, deletePackTC, updatePackTC} from \"../../state/reducers/packs\";\r\nimport {CardPackType} from \"../../api/api\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes/Routes\";\r\nimport styles from \"./Packs.module.css\";\r\n\r\ntype PackSelectorType ={\r\n    packs: CardPackType[]\r\n    cardPacksTotalCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport const Packs = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    let {packs, cardPacksTotalCount, page, pageCount} = useSelector<appRootStateType, PackSelectorType>(state => state.packs);\r\n    let [addingPackName, setAddingPackName] = useState(\"\");\r\n    let [privatePack, setPrivatePack] = useState(false);\r\n    let [filterPackName, setFilterPackName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC('', 0, 999, 1, 2000))\r\n    }, []);\r\n\r\n    const onChangeHandlerAddingPackName = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setAddingPackName(e.currentTarget.value);\r\n    }\r\n\r\n    const onChangeHandlerPrivatePack = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setPrivatePack(e.currentTarget.checked);\r\n    }\r\n\r\n    const onClickHandlerAddingPackName = useCallback(() => {\r\n        dispatch(addPackTC(addingPackName, privatePack));\r\n        dispatch(getPacksTC('', 0, 999, 1, 10))\r\n    },[addingPackName, privatePack]);\r\n\r\n    const onChangeHandlerFilterPackName = useCallback((e: React.FormEvent<HTMLInputElement>) => {\r\n        setFilterPackName(e.currentTarget.value);\r\n        dispatch(getPacksTC(filterPackName, 0, 999, 1, 10))\r\n    },[filterPackName]);\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <input onChange={onChangeHandlerAddingPackName} value={addingPackName} placeholder=\"Enter new PackName\"/>\r\n            <h3>Private Pack</h3>\r\n            <input type=\"checkbox\" title={\"Private Pack\"} onClick={onChangeHandlerPrivatePack} checked={privatePack}/>\r\n            <button onClick={onClickHandlerAddingPackName}>Add</button>\r\n            <input onChange={onChangeHandlerFilterPackName} value={filterPackName} placeholder=\"Filter by PackName\"/>\r\n            <div>Total Packs: {cardPacksTotalCount}</div>\r\n            {packs.map(el => {\r\n                return (\r\n                    <div>\r\n                        {el._id} / {el.cardsCount} / {el.created} / {el.name} /  \r\n                        {el.private} / {el.user_id} / {el.user_name}\r\n                        <button>updatePack</button> \r\n                        <button onClick={(() => {\r\n                            dispatch(deletePackTC(el._id));\r\n                            dispatch(getPacksTC(filterPackName, 0, 999, 1, 10));\r\n                            })}>deletePack</button>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div></div>\r\n        </div>\r\n    )\r\n}","import {cardsAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst cardsInitialState = {\r\n    cardAnswer: '',\r\n    cardQuestion: '',\r\n    cardsPack_id: '',\r\n    min: 1,\r\n    max: 1,\r\n    page: 1,\r\n    pageCount: 1,\r\n    grade: 0,\r\n    shots: 0,\r\n    rating: 0,\r\n    type: '',\r\n    id: '',\r\n}\r\n\r\nexport const cardsReducer = (state: CardsInitialState = cardsInitialState, action: ActionType): CardsInitialState => {\r\n    switch (action.type) {\r\n        case \"CARDS/GET_CARDS\":\r\n            return {...state, \r\n                cardAnswer: action.cardAnswer,\r\n                cardQuestion: action.cardQuestion,\r\n                cardsPack_id: action.cardsPack_id,\r\n                min: action.min,\r\n                max: action.max,\r\n                page: action.page,\r\n                pageCount: action.pageCount,\r\n            }\r\n        case \"CARDS/ADD_CARD\":\r\n            return {...state, \r\n                cardsPack_id: action.cardsPack_id,\r\n                cardQuestion: action.cardQuestion,\r\n                cardAnswer: action.cardAnswer,\r\n                grade: action.grade,\r\n                shots: action.shots,\r\n                rating: action.rating,\r\n                type: action.type,\r\n            }\r\n        case \"CARDS/DELETE_CARD\":\r\n            return {...state, \r\n                id: action.id,\r\n            }\r\n        case \"CARDS/UPDATE_CARD\":\r\n            return {...state, \r\n                cardsPack_id: action.cardsPack_id,\r\n                cardQuestion: action.cardQuestion,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action\r\nexport const getCardsAC = (cardAnswer: string, cardQuestion: string, cardsPack_id: string, min: number, max: number, page: number, pageCount: number) => (\r\n    {type: \"CARDS/GET_CARDS\", cardAnswer, cardQuestion, cardsPack_id, min, max, page, pageCount} as const);\r\nexport const addCardAC = (cardsPack_id: string, cardQuestion: string, cardAnswer: string, grade: number, shots: number, rating: number, typeCard: string) => (\r\n    {type: \"CARDS/ADD_CARD\", cardsPack_id, cardQuestion, cardAnswer, grade, shots, rating, typeCard} as const);\r\nexport const deleteCardAC = (id: string) => (\r\n    {type: \"CARDS/DELETE_CARD\", id} as const);\r\nexport const updateCardAC = (cardsPack_id: string, cardQuestion: string) => (\r\n    {type: \"CARDS/UPDATE_CARD\", cardsPack_id, cardQuestion} as const);\r\n\r\n//TC    \r\nexport const cardsTC = (cardAnswer: string, cardQuestion: string, cardsPack_id: string, min: number, max: number, page: number, pageCount: number) => (dispatch: Dispatch) => {\r\n    return cardsAPI.getCards(cardAnswer, cardQuestion, cardsPack_id, min, max, page, pageCount)\r\n        .then((res) => {\r\n            debugger\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\n\r\n// Type\r\nexport type CardsInitialState = typeof cardsInitialState\r\nexport type ActionType = GetCards | AddCard | DeleteCard | UpdateCard\r\n\r\nexport type GetCards = ReturnType<typeof getCardsAC>\r\nexport type AddCard = ReturnType<typeof addCardAC>\r\nexport type DeleteCard = ReturnType<typeof deleteCardAC>\r\nexport type UpdateCard = ReturnType<typeof updateCardAC>","import {gradeAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst gradeInitialState = {\r\n    grade: 1, \r\n    card_id: '',\r\n}\r\n\r\nexport const gradeReducer = (state: GradeInitialState = gradeInitialState, action: ActionType): GradeInitialState => {\r\n    switch (action.type) {\r\n        case \"GRADE/UPDATE_GRADE\":\r\n            return {...state, \r\n                grade: action.grade, \r\n                card_id: action.card_id, \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//Action\r\nexport const updateGradeAC = (grade: 1|2|3|4|5, card_id: string) => (\r\n    {type: \"GRADE/UPDATE_GRADE\", grade, card_id} as const);\r\n\r\n//TC    \r\nexport const updateGradeTC = (grade: 1|2|3|4|5, card_id: string) => (dispatch: Dispatch) => {\r\n    return gradeAPI.updateGrade(grade, card_id)\r\n        .then((res) => {\r\n            debugger\r\n        })\r\n        .catch((error) => alert(error))\r\n}\r\n\r\n// Type\r\nexport type GradeInitialState = typeof gradeInitialState\r\nexport type ActionType = UpdateGrade\r\n\r\nexport type UpdateGrade = ReturnType<typeof updateGradeAC>","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {cardsTC} from \"../../state/reducers/cards\";\r\nimport {updateGradeTC} from \"../../state/reducers/grade\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes/Routes\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    let cards = useSelector<appRootStateType>(state => state.cards);\r\n\r\n    dispatch(cardsTC('question', 'answer', '6048cb6b25d4bb00042a4667', 1, 4, 1, 7));\r\n    dispatch(updateGradeTC(1, '5eb543f6bea3ad21480f1ee7'));\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n                \r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {usersTC} from \"../../state/reducers/users\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes/Routes\";\r\nimport styles from \"./Users.module.css\";\r\n\r\nexport const Users = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    let users = useSelector<appRootStateType>(state => state.users);\r\n\r\n    dispatch(usersTC('nya', 3, 9, 1, 7));\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n                \r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styles from \"./Gistogramm.module.css\";\r\n\r\ntype PropsType = {\r\n    date: string\r\n    count: number\r\n    max: number\r\n}\r\n\r\nexport const Gistogramm = (props: PropsType) => {\r\n    if(!props) return null;\r\n    let koef = props.count / props.max * 255;\r\n    let yellow;\r\n    85<koef && koef<170 ? yellow=true : yellow=false;\r\n    return (\r\n        <div className={styles.container}>\r\n            <div style={{height: `${props.count}px`, \r\n                        backgroundColor: `rgb(${yellow ? koef+100 : koef},${yellow ? 355-koef : 255 - koef},${0})`,\r\n                        }}>\r\n            </div>\r\n            {props.date}\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPacksTC} from \"../../state/reducers/packs\";\r\nimport {CardPackType} from \"../../api/api\";\r\nimport {appRootStateType} from \"../../state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes/Routes\";\r\nimport styles from \"./Stats.module.css\";\r\nimport {Gistogramm} from \"./gistogramm/Gistogramm\";\r\n\r\ntype PackSelectorType = {\r\n    packs: CardPackType[]\r\n    cardPacksTotalCount: number\r\n}\r\n\r\nexport const Stats = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    let {packs, cardPacksTotalCount} = useSelector<appRootStateType, PackSelectorType>(state => state.packs);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC('', 0, 999, 1, 2000))\r\n    }, []);\r\n\r\n    let arr = [];\r\n    let max = 0;\r\n    for(let i = 0; i < packs.length; i++){\r\n        arr[i] = packs[i].created.substr(0,7);\r\n    }\r\n    let narr = Object.entries(arr.reduce((acc: any, el: string) => {\r\n        acc[`${el}`] = (acc[`${el}`] || 0) + 1;\r\n        return acc;\r\n    }, {}));\r\n    for(let i = 0; i < narr.length; i++){\r\n        if(Number(narr[i][1]) > max) max = Number(narr[i][1])\r\n    }\r\n    console.log(max)\r\n    return (\r\n        <div className={styles.container}>\r\n            <div>Total Packs: {cardPacksTotalCount}</div>\r\n            {narr && narr.map((el: any) => {\r\n                return (\r\n                    <Gistogramm date={el[0]} count={el[1]} max={max}/>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Profile} from \"../components/profile/Profile\";\r\nimport {Login} from \"../components/login/Login\";\r\nimport {PasswordRecovery} from \"../components/passwordRecovery/PasswordRecovery\";\r\nimport {EnteringNewPassword} from \"../components/enteringNewPassword/EnteringNewPassword\";\r\nimport {Registration} from \"../components/registration/Registration\";\r\nimport {Error} from \"../components/error404/Error404\";\r\nimport {Nav} from \"../components/nav/Nav\";\r\nimport {Packs} from \"../components/packs/Packs\";\r\nimport {Cards} from \"../components/cards/Cards\";\r\nimport {Users} from \"../components/users/Users\";\r\nimport {Stats} from \"../components/stats/Stats\";\r\n\r\nexport const PATH = {\r\n    PROFILE: '/profile',\r\n    LOGIN: '/login',\r\n    PASSWORD_RECOVERY: '/password-recovery',\r\n    ENTERING_NEW_PASSWORD: '/entering-new-password',\r\n    REGISTRATION: '/registration',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards',\r\n    USERS: '/users',\r\n    STATS: '/stats',\r\n}\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n            <Switch>\r\n                <Route exact path={PATH.PROFILE} component={Profile}/>\r\n                <Route exact path={PATH.LOGIN} component={Login}/>\r\n                <Route exact path={PATH.PASSWORD_RECOVERY} component={PasswordRecovery}/>\r\n                <Route exact path={PATH.ENTERING_NEW_PASSWORD} component={EnteringNewPassword}/>\r\n                <Route exact path={PATH.REGISTRATION} component={Registration}/>\r\n                <Route exact path={PATH.PACKS} component={Packs}/>\r\n                <Route exact path={PATH.CARDS} component={Cards}/>\r\n                <Route exact path={PATH.USERS} component={Users}/>\r\n                <Route exact path={PATH.STATS} component={Stats}/>\r\n                <Route path='*' component={Error}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Routes} from \"./Routes/Routes\";\r\nimport {authTC} from \"./state/reducers/AuthReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    dispatch(authTC()); \r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: actionType) => {\r\n    return state\r\n}\r\ntype actionType = {}","const initialState = {}\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nexport const enteringNewPasswordReducer = (state: initialStateType = initialState, action: actionType) => {\r\n    return state\r\n}\r\ntype actionType = {}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./reducers/login\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {registrationReducer} from \"./reducers/registration\";\r\nimport {passwordRecoveryReducer} from \"./reducers/passwordRecovery\";\r\nimport {enteringNewPasswordReducer} from \"./reducers/enteringNewPassword\";\r\nimport {packsReducer} from \"./reducers/packs\";\r\nimport {cardsReducer} from \"./reducers/cards\";\r\nimport {usersReducer} from \"./reducers/users\";\r\nimport {authReducer} from \"./reducers/AuthReducer\";\r\nimport {gradeReducer} from \"./reducers/grade\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    enteringNewPassword: enteringNewPasswordReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    grade: gradeReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type appRootStateType = ReturnType<typeof rootReducer>\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./state/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}